library(tidyr)
library(ggplot2)
library(gganimate)
library(av)
library(gifski)
library(magick)
library(readxl)
library(forcats)
library(viridis)
mapa<-sf::read_sf("C:/Users/eduar/Google Drive (1)/Cursos/R Commander/Base de Datos/ShapeFilesCenso2010/PROVCenso2010.shp")
mapa <- st_transform(mapa, crs = "+proj=longlat +datum=WGS84")
data_mapa<- read_excel("C:/Users/eduar/Google Drive (1)/Work/Short articles/COVID/DataCOVID.xlsx",sheet = "provincia")
mapa <- mapa %>%
mutate(
Provincia = str_to_title(TOPONIMIA),
Provincia = recode(
Provincia,
"San Pedro De Macorís" = "San Pedro de Macorís",
"San José De Ocoa" = "San José de Ocoa",
"Sanchez Ramírez" = "Sánchez Ramírez")
) %>%
dplyr::select(Provincia, everything(), -TOPONIMIA, -ENLACE)
Sys.setlocale("LC_TIME", "Spanish")
data_mapa<- data_mapa %>%
mutate(fecha=as.Date(Fecha),
fecha_titulo=  as.Date(Fecha) ,
fecha_fac_order=fct_inorder(fecha_titulo)) %>%
select(-Recuperados,-Fallecidos)
data_mapa<- data_mapa %>%
mutate(fecha=as.Date(Fecha),
fecha_titulo=  as.Date(Fecha) ,
fecha_factor=factor(fecha_titulo)) %>%
select(-Recuperados,-Fallecidos)
data_mapa
mapa<-sf::read_sf("C:/Users/eduar/Google Drive (1)/Cursos/R Commander/Base de Datos/ShapeFilesCenso2010/PROVCenso2010.shp")
mapa <- st_transform(mapa, crs = "+proj=longlat +datum=WGS84")
data_mapa<- read_excel("C:/Users/eduar/Google Drive (1)/Work/Short articles/COVID/DataCOVID.xlsx",sheet = "provincia")
mapa <- mapa %>%
mutate(
Provincia = str_to_title(TOPONIMIA),
Provincia = recode(
Provincia,
"San Pedro De Macorís" = "San Pedro de Macorís",
"San José De Ocoa" = "San José de Ocoa",
"Sanchez Ramírez" = "Sánchez Ramírez")
) %>%
dplyr::select(Provincia, everything(), -TOPONIMIA, -ENLACE)
Sys.setlocale("LC_TIME", "Spanish")
data_mapa<- data_mapa %>%
mutate(fecha=as.Date(Fecha),
fecha_titulo=format(as.Date(Fecha), "%d %b"),
fecha_factor=factor(fecha_titulo)) %>%
select(-Recuperados,-Fallecidos)
data_mapa
pretty_breaks <- c(0.1,5,10,20,30,40,50,100,200,400,600)
# find the extremes
minVal <- min(data_mapa$Casos, na.rm = T)
maxVal <- max(data_mapa$Casos, na.rm = T)
# compute labels
labels <- c()
brks <- c(minVal, pretty_breaks, maxVal)
# round the labels (actually, only the extremes)
for(idx in 1:length(brks)){
labels <- c(labels,round(brks[idx + 1], 2))
}
labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data_mapa$brks <- cut(data_mapa$Casos,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data_mapa$brks)
labels_scale <- rev(brks_scale)
mapa_animado_final<-mapa %>%
left_join(data_mapa) %>%
ggplot() +
geom_sf(aes(fill = brks))+
geom_sf_text(aes(label = Casos), colour = "white",size=8.5)+
theme_void() +
theme(legend.position = "none")+
ggtitle("Evolución del COVID-19 en República Dominicana: {closest_state}") +
theme(plot.title = element_text(size = 30, face = "bold"))+
scale_fill_manual(
# in manual scales, one has to define colors, well, manually
# I can directly access them using viridis' magma-function
values = magma(15)[3:14],
breaks = rev(brks_scale),
drop = FALSE,
labels = labels_scale
) + transition_states(fecha_factor) +
ease_aes()
animate(mapa_animado_final,width = 1600, height = 1000)
mapa %>%
left_join(data_mapa)
data_mapa
mapa<-sf::read_sf("C:/Users/eduar/Google Drive (1)/Cursos/R Commander/Base de Datos/ShapeFilesCenso2010/PROVCenso2010.shp")
mapa <- st_transform(mapa, crs = "+proj=longlat +datum=WGS84")
data_mapa<- read_excel("C:/Users/eduar/Google Drive (1)/Work/Short articles/COVID/DataCOVID.xlsx",sheet = "provincia")
mapa <- mapa %>%
mutate(
Provincia = str_to_title(TOPONIMIA),
Provincia = recode(
Provincia,
"San Pedro De Macorís" = "San Pedro de Macorís",
"San José De Ocoa" = "San José de Ocoa",
"Sanchez Ramírez" = "Sánchez Ramírez")
) %>%
dplyr::select(Provincia, everything(), -TOPONIMIA, -ENLACE)
Sys.setlocale("LC_TIME", "Spanish")
data_mapa <- data_mapa %>%
mutate(fecha=as.Date(Fecha),
fecha_titulo=format(as.Date(Fecha), "%d %b"),
fecha_factor=fct_inorder(fecha_titulo)) %>%
select(-Recuperados,-Fallecidos)
data_mapa
mapa_animado_final<-mapa %>%
left_join(data_mapa) %>%
ggplot() +
geom_sf(aes(fill = brks))+
geom_sf_text(aes(label = Casos), colour = "white",size=8.5)+
theme_void() +
theme(legend.position = "none")+
ggtitle("Evolución del COVID-19 en República Dominicana: {closest_state}") +
theme(plot.title = element_text(size = 30, face = "bold"))+
scale_fill_manual(
# in manual scales, one has to define colors, well, manually
# I can directly access them using viridis' magma-function
values = magma(15)[3:14],
breaks = rev(brks_scale),
drop = FALSE,
labels = labels_scale
) + transition_states(fecha_factor) +
ease_aes()
pretty_breaks <- c(0.1,5,10,20,30,40,50,100,200,400,600)
# find the extremes
minVal <- min(data_mapa$Casos, na.rm = T)
maxVal <- max(data_mapa$Casos, na.rm = T)
# compute labels
labels <- c()
brks <- c(minVal, pretty_breaks, maxVal)
# round the labels (actually, only the extremes)
for(idx in 1:length(brks)){
labels <- c(labels,round(brks[idx + 1], 2))
}
labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data_mapa$brks <- cut(data_mapa$Casos,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data_mapa$brks)
labels_scale <- rev(brks_scale)
mapa_animado_final<-mapa %>%
left_join(data_mapa) %>%
ggplot() +
geom_sf(aes(fill = brks))+
geom_sf_text(aes(label = Casos), colour = "white",size=8.5)+
theme_void() +
theme(legend.position = "none")+
ggtitle("Evolución del COVID-19 en República Dominicana: {closest_state}") +
theme(plot.title = element_text(size = 30, face = "bold"))+
scale_fill_manual(
# in manual scales, one has to define colors, well, manually
# I can directly access them using viridis' magma-function
values = magma(15)[3:14],
breaks = rev(brks_scale),
drop = FALSE,
labels = labels_scale
) + transition_states(fecha_factor) +
ease_aes()
animate(mapa_animado_final,width = 1600, height = 1000)
anim_save("covid_nuevo.gif")
setwd()
getwd()
anim_save("covid_nuevo1.gif")
# Mapa
library(sf)
library(stringr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(gganimate)
library(av)
library(gifski)
library(magick)
library(readxl)
library(forcats)
library(viridis)
mapa<-sf::read_sf("C:/Users/eduar/Google Drive (1)/Cursos/R Commander/Base de Datos/ShapeFilesCenso2010/PROVCenso2010.shp")
mapa <- st_transform(mapa, crs = "+proj=longlat +datum=WGS84")
data_mapa<- read_excel("C:/Users/eduar/Google Drive (1)/Work/Short articles/COVID/DataCOVID.xlsx",sheet = "provincia")
mapa <- mapa %>%
mutate(
Provincia = str_to_title(TOPONIMIA),
Provincia = recode(
Provincia,
"San Pedro De Macorís" = "San Pedro de Macorís",
"San José De Ocoa" = "San José de Ocoa",
"Sanchez Ramírez" = "Sánchez Ramírez")
) %>%
dplyr::select(Provincia, everything(), -TOPONIMIA, -ENLACE)
Sys.setlocale("LC_TIME", "Spanish")
data_mapa <- data_mapa %>%
mutate(fecha=as.Date(Fecha),
fecha_titulo=format(as.Date(Fecha), "%d %b"),
fecha_factor=fct_inorder(fecha_titulo)) %>%
select(-Recuperados,-Fallecidos)
pretty_breaks <- c(0.1,5,10,20,30,40,50,100,200,400,600)
# find the extremes
minVal <- min(data_mapa$Casos, na.rm = T)
maxVal <- max(data_mapa$Casos, na.rm = T)
# compute labels
labels <- c()
brks <- c(minVal, pretty_breaks, maxVal)
# round the labels (actually, only the extremes)
for(idx in 1:length(brks)){
labels <- c(labels,round(brks[idx + 1], 2))
}
labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data_mapa$brks <- cut(data_mapa$Casos,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data_mapa$brks)
labels_scale <- rev(brks_scale)
mapa_animado_final<-mapa %>%
left_join(data_mapa) %>%
ggplot() +
geom_sf(aes(fill = brks))+
geom_sf_text(aes(label = Casos), colour = "white",size=8.5)+
theme_void() +
theme(legend.position = "none")+
ggtitle("Evolución del COVID-19 en República Dominicana: {closest_state}") +
theme(plot.title = element_text(size = 30, face = "bold"))+
scale_fill_manual(
# in manual scales, one has to define colors, well, manually
# I can directly access them using viridis' magma-function
values = magma(15)[3:14],
breaks = rev(brks_scale),
drop = FALSE,
labels = labels_scale
) + transition_states(fecha_factor) +
ease_aes()
animate(mapa_animado_final,fps=3,width = 1600, height = 1000)
animate(mapa_animado_final,fps=4,width = 1600, height = 1000)
library(flexdashboard)
library(tidyr)
library(readxl)
library(plotly)
library(dplyr)
library(DT)
library(ggmap)
library(rgdal)
library(rgeos)
library(maptools)
library(tmap)
library(ggplot2)
library(lubridate)
library(data.table)
library(sp)
library(ggpubr)
library(grid)
library(leaflet)
library(shiny)
library(tibble)
library(deSolve)
library(reshape2)
data_provincias<-read_xlsx("C:/Users/eduar/Google Drive (1)/Work/Short articles/COVID/DataCOVID.xlsx",sheet="provincia")
ggplotly(
data_provincias %>%
mutate(Fecha=as.Date(Fecha),
Año=substr(Fecha,1,4),
Mes=substr(Fecha,6,7),
Día=substr(Fecha,9,13)) %>%
ggplot(aes(Fecha,Casos,group=Provincia))+geom_line(aes(text= paste('Fecha:', paste(Día,"/",Mes,"/",Año),
'<br>Casos Confirmados:', formatC(Casos,big.mark = ','))),show.legend = F)+
geom_line(aes(y = Recuperados,text= paste('Fecha:', paste(Día,"/",Mes,"/",Año),
'<br>Casos Recuperados:', formatC(Recuperados,big.mark = ','))), color = "steelblue")+
geom_line(aes(y = Fallecidos, text= paste('Fecha:', paste(Día,"/",Mes,"/",Año),
'<br>Casos Fallecidos:', formatC(Fallecidos,big.mark = ','))), color = "darkred")+
facet_wrap(~Provincia, scales = "free_y") +
theme(axis.title.x = element_text(angle=90,vjust = -1),
axis.title.y = element_text(vjust = -1))+
theme_minimal(), tooltip = "text"
)
tail(data_provincias$Casos)
data_provincias
data_provincias %>%
group_by(Provincia) %>%
tail(1)
data_provincias %>%
group_by(Provincia) %>%
top_n(1, Casos)
data_provincias %>%
group_by(Provincia) %>%
top_n(1)
data_provincias %>%
group_by(Provincia) %>%
top_n(1, Casos)
data_provincias %>%
group_by(Provincia) %>%
top_n(1, Casos) %>%
pull()
data_provincias
data_provincias %>%
mutate(fecha=as.Date(Fecha))
data_provincias %>%
mutate(fecha=as.Date(Fecha)) %>%
filter(fecha=="2020-03-24") %>%
group_by(Provincia) %>%
top_n(1, Casos) %>%
pull()
data_provincias %>%
mutate(fecha=as.Date(Fecha)) %>%
filter(fecha=="2020-03-24") %>%
group_by(Provincia) %>%
top_n(1, Casos)
data_provincias %>%
group_by(Provincia) %>%
top_n(1, Casos) %>%
pull()
data_provincias %>%
group_by(Provincia) %>%
slice(tail(row_number(), 2))
data_provincias %>%
group_by(Provincia) %>%
slice(tail(row_number(), 2))
data_provincias %>%
group_by(Provincia) %>%
slice(tail(row_number(), 1))
data_provincias %>%
group_by(Provincia) %>%
slice(tail(Casos, 1))
data_provincias %>%
group_by(Provincia) %>%
slice(tail(row_number(), 1))
data_provincias %>%
group_by(Provincia) %>%
top_n(Casos, 1)
data_provincias %>%
group_by(Provincia) %>%
top_n( 1,Casos)
data_provincias %>%
group_by(Provincia) %>%
top_n(row_number(), 1)
data_provincias %>%
group_by(Provincia) %>%
slice()
data_provincias %>%
group_by(Provincia) %>%
tail(row_number(), 1)
data_provincias %>%
group_by(Provincia) %>%
slice(tail(row_number(), 1))
data_provincias %>%
group_by(Provincia) %>%
slice(tail(row_number(), 1)) %>%
select(Casos)
Last<-data_provincias %>%
group_by(Provincia) %>%
slice(tail(row_number(), 1)) %>%
select(Casos)
Last
ggplotly(
data_provincias %>%
mutate(Fecha=as.Date(Fecha),
Año=substr(Fecha,1,4),
Mes=substr(Fecha,6,7),
Día=substr(Fecha,9,13)) %>%
ggplot(aes(Fecha,Casos,group=Provincia))+geom_line(aes(text= paste('Fecha:', paste(Día,"/",Mes,"/",Año),
'<br>Casos Confirmados:', formatC(Casos,big.mark = ','))),show.legend = F)+
geom_line(aes(y = Recuperados,text= paste('Fecha:', paste(Día,"/",Mes,"/",Año),
'<br>Casos Recuperados:', formatC(Recuperados,big.mark = ','))), color = "steelblue")+
geom_line(aes(y = Fallecidos, text= paste('Fecha:', paste(Día,"/",Mes,"/",Año),
'<br>Casos Fallecidos:', formatC(Fallecidos,big.mark = ','))), color = "darkred")+
facet_wrap(~Provincia, scales = "free_y") +
gghighlight(Last)+
theme(axis.title.x = element_text(angle=90,vjust = -1),
axis.title.y = element_text(vjust = -1))+
theme_minimal(), tooltip = "text"
)
library(gghighlight)
install.packages("gghighlight")
library(gghighlight)
ggplotly(
data_provincias %>%
mutate(Fecha=as.Date(Fecha),
Año=substr(Fecha,1,4),
Mes=substr(Fecha,6,7),
Día=substr(Fecha,9,13)) %>%
ggplot(aes(Fecha,Casos,group=Provincia))+geom_line(aes(text= paste('Fecha:', paste(Día,"/",Mes,"/",Año),
'<br>Casos Confirmados:', formatC(Casos,big.mark = ','))),show.legend = F)+
geom_line(aes(y = Recuperados,text= paste('Fecha:', paste(Día,"/",Mes,"/",Año),
'<br>Casos Recuperados:', formatC(Recuperados,big.mark = ','))), color = "steelblue")+
geom_line(aes(y = Fallecidos, text= paste('Fecha:', paste(Día,"/",Mes,"/",Año),
'<br>Casos Fallecidos:', formatC(Fallecidos,big.mark = ','))), color = "darkred")+
facet_wrap(~Provincia, scales = "free_y") +
gghighlight(Last)+
theme(axis.title.x = element_text(angle=90,vjust = -1),
axis.title.y = element_text(vjust = -1))+
theme_minimal(), tooltip = "text"
)
ggplotly(
data_provincias %>%
mutate(Fecha=as.Date(Fecha),
Año=substr(Fecha,1,4),
Mes=substr(Fecha,6,7),
Día=substr(Fecha,9,13)) %>%
ggplot(aes(Fecha,Casos,group=Provincia))+geom_line(aes(text= paste('Fecha:', paste(Día,"/",Mes,"/",Año),
'<br>Casos Confirmados:', formatC(Casos,big.mark = ','))),show.legend = F)+
geom_line(aes(y = Recuperados,text= paste('Fecha:', paste(Día,"/",Mes,"/",Año),
'<br>Casos Recuperados:', formatC(Recuperados,big.mark = ','))), color = "steelblue")+
geom_line(aes(y = Fallecidos, text= paste('Fecha:', paste(Día,"/",Mes,"/",Año),
'<br>Casos Fallecidos:', formatC(Fallecidos,big.mark = ','))), color = "darkred")+
facet_wrap(~Provincia, scales = "free_y") +
gghighlight(max(Casos))+
theme(axis.title.x = element_text(angle=90,vjust = -1),
axis.title.y = element_text(vjust = -1))+
theme_minimal(), tooltip = "text"
)
ggplotly(
data_provincias %>%
mutate(Fecha=as.Date(Fecha),
Año=substr(Fecha,1,4),
Mes=substr(Fecha,6,7),
Día=substr(Fecha,9,13)) %>%
ggplot(aes(Fecha,Casos,group=Provincia))+geom_line(aes(text= paste('Fecha:', paste(Día,"/",Mes,"/",Año),
'<br>Casos Confirmados:', formatC(Casos,big.mark = ','))),show.legend = F)+
geom_line(aes(y = Recuperados,text= paste('Fecha:', paste(Día,"/",Mes,"/",Año),
'<br>Casos Recuperados:', formatC(Recuperados,big.mark = ','))), color = "steelblue")+
geom_line(aes(y = Fallecidos, text= paste('Fecha:', paste(Día,"/",Mes,"/",Año),
'<br>Casos Fallecidos:', formatC(Fallecidos,big.mark = ','))), color = "darkred")+
facet_wrap(~Provincia, scales = "free_y") +
gghighlight( Casos )+
theme(axis.title.x = element_text(angle=90,vjust = -1),
axis.title.y = element_text(vjust = -1))+
theme_minimal(), tooltip = "text"
)
# Mapa
library(sf)
library(stringr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(gganimate)
library(av)
library(gifski)
library(magick)
library(readxl)
library(forcats)
library(viridis)
mapa<-sf::read_sf("C:/Users/eduar/Google Drive (1)/Cursos/R Commander/Base de Datos/ShapeFilesCenso2010/PROVCenso2010.shp")
mapa <- st_transform(mapa, crs = "+proj=longlat +datum=WGS84")
data_mapa<- read_excel("C:/Users/eduar/Google Drive (1)/Work/Short articles/COVID/DataCOVID.xlsx",sheet = "provincia")
mapa <- mapa %>%
mutate(
Provincia = str_to_title(TOPONIMIA),
Provincia = recode(
Provincia,
"San Pedro De Macorís" = "San Pedro de Macorís",
"San José De Ocoa" = "San José de Ocoa",
"Sanchez Ramírez" = "Sánchez Ramírez")
) %>%
dplyr::select(Provincia, everything(), -TOPONIMIA, -ENLACE)
Sys.setlocale("LC_TIME", "Spanish")
data_mapa <- data_mapa %>%
mutate(fecha=as.Date(Fecha),
fecha_titulo=format(as.Date(Fecha), "%d %b"),
fecha_factor=fct_inorder(fecha_titulo)) %>%
select(-Recuperados,-Fallecidos)
pretty_breaks <- c(0.1,5,10,20,30,40,50,100,200,400,600)
# find the extremes
minVal <- min(data_mapa$Casos, na.rm = T)
maxVal <- max(data_mapa$Casos, na.rm = T)
# compute labels
labels <- c()
brks <- c(minVal, pretty_breaks, maxVal)
# round the labels (actually, only the extremes)
for(idx in 1:length(brks)){
labels <- c(labels,round(brks[idx + 1], 2))
}
labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data_mapa$brks <- cut(data_mapa$Casos,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data_mapa$brks)
labels_scale <- rev(brks_scale)
mapa_animado_final<-mapa %>%
left_join(data_mapa) %>%
ggplot() +
geom_sf(aes(fill = brks))+
geom_sf_text(aes(label = Casos), colour = "white",size=8.5)+
theme_void() +
theme(legend.position = "none")+
ggtitle("Evolución del COVID-19 en República Dominicana: {closest_state}") +
theme(plot.title = element_text(size = 30, face = "bold"))+
scale_fill_manual(
# in manual scales, one has to define colors, well, manually
# I can directly access them using viridis' magma-function
values = magma(15)[3:14],
breaks = rev(brks_scale),
drop = FALSE,
labels = labels_scale
) + transition_states(fecha_factor) +
ease_aes()
getwd()
animate(mapa_animado_final,fps=3,width = 1600, height = 1000)
anim_save("C:/Users/eduar/Google Drive (1)/Work/Short articles/COVID/covid_mapa.gif")
setwd("C:/Users/eduar/Google Drive (1)/Work/Short articles/COVID/Automatizado/COVID-19-Republica-Dominicana")
